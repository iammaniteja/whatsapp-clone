[{"/Users/mani/Desktop/React/whatsapp-clone/client/src/index.js":"1","/Users/mani/Desktop/React/whatsapp-clone/client/src/reportWebVitals.js":"2","/Users/mani/Desktop/React/whatsapp-clone/client/src/App.js":"3","/Users/mani/Desktop/React/whatsapp-clone/client/src/Components/ListComponent.js":"4","/Users/mani/Desktop/React/whatsapp-clone/client/src/Components/ChatComponent.js":"5","/Users/mani/Desktop/React/whatsapp-clone/client/src/mockData.js":"6"},{"size":500,"mtime":1632801958554,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1632801969649,"results":"9","hashOfConfig":"8"},{"size":1199,"mtime":1635478410224,"results":"10","hashOfConfig":"8"},{"size":2921,"mtime":1635478484289,"results":"11","hashOfConfig":"8"},{"size":3397,"mtime":1633414053644,"results":"12","hashOfConfig":"8"},{"size":1019,"mtime":1633409487315,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sfrjp6",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mani/Desktop/React/whatsapp-clone/client/src/index.js",[],"/Users/mani/Desktop/React/whatsapp-clone/client/src/reportWebVitals.js",[],"/Users/mani/Desktop/React/whatsapp-clone/client/src/App.js",[],"/Users/mani/Desktop/React/whatsapp-clone/client/src/Components/ListComponent.js",["27"],"import styled from 'styled-components'\nimport {contactList} from '../mockData';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    flex: 1.6;\n`;\nconst Profile = styled.div`\n    display: flex;\n    flex-direction: row;\n    background: #ededed;\n    padding: 10px;\n`;\n\nconst ProfileImg = styled.img`\n    height: 32px;\n    width: 32px;\n    border-radius: 50%;\n`;\nconst SearchBox = styled.div`\n    background: #f6f6f6;\n    padding: 10px;\n    display: flex;\n`;\nexport const SearchContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    background: white;\n    border-radius: 16px;\n    width: 100%;\n    padding: 5px 10px;\n`;\n\nconst SearchIcon = styled.img`\n    height: 28px;\n    width: 28px;\n`;\nexport const SearchInput = styled.input`\n    width: 100%;\n    outline: none;\n    border: none;\n    font-size: 15px;\n    margin-left: 10px;\n`;\n\nconst ContactItem = styled.div `\n    display: flex;\n    flex-direction: row;\n    /* width: 100%; */\n    border-bottom: 1px solid #f2f2f2;\n    background: white;\n    cursor: pointer;\n    padding: 15px 12px;\n    :hover {\n        background: #ebebeb;\n    }\n`;\n\nconst ProfileIcon = styled(ProfileImg) `\n    width: 38px;\n    height: 38px;\n`;\n\nconst ContactInfo = styled.div `\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin: 0px 12px;\n`;\n\nconst ContactName = styled.span `\n    width: 100%;\n    font-size: 16px;\n    color: black;\n`;\n\nconst LatestMessage = styled.span `\n    width: 100%;\n    font-size: 14px;\n    color: rgba(0,0,0,0.8);\n    margin-top: 3px;\n`;\n\nconst MessageTime = styled.span `\n    font-size: 12px;\n    margin-right: 10px;\n    color: rgba(0,0,0,0.45);\n    white-space: nowrap;\n`;\n\nconst ContactComponent = (props) => {\n    const {\n        id,\n        name,\n        profilePic,\n        lastText,\n        lastTextTime} = props.details;\n    return (\n        <ContactItem onClick = {() => props.setChatSelected(props.details)}>\n            <ProfileIcon src={profilePic}/> \n            <ContactInfo>\n                <ContactName>{name}</ContactName>\n                <LatestMessage>{lastText}</LatestMessage>\n            </ContactInfo>\n            <MessageTime>{lastTextTime}</MessageTime>\n        </ContactItem>\n    )\n}\n\nconst ListComponent = (props) => {\n    return(\n        <Container>\n            <Profile>\n                <ProfileImg src = \"/Profile/mani.jpeg\"></ProfileImg>\n            </Profile>\n            <SearchBox>\n                <SearchContainer>\n                    <SearchIcon src = \"/search-icon.svg\" />\n                    <SearchInput placeholder = \"Search or start a new chat\" />\n                </SearchContainer>\n            </SearchBox>\n            {contactList.map (\n                (contact) => (\n                <ContactComponent details = {contact} setChatSelected = {props.setChatSelected}/>)\n            )}\n        </Container>\n    )\n}\n\nexport default ListComponent;","/Users/mani/Desktop/React/whatsapp-clone/client/src/Components/ChatComponent.js",[],"/Users/mani/Desktop/React/whatsapp-clone/client/src/mockData.js",[],{"ruleId":"28","severity":1,"message":"29","line":95,"column":9,"nodeType":"30","messageId":"31","endLine":95,"endColumn":11},"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar"]