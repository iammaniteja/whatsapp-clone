{"ast":null,"code":"var _jsxFileName = \"/Users/mani/Desktop/React/whatsapp-clone/src/Components/ChatComponent.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { SearchContainer, SearchInput } from './ListComponent';\nimport { messagesList } from '../mockData';\nimport Picker from 'emoji-picker-react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    flex: 3;\n    background: #f6f7f8;\n`;\n_c = Container;\nconst ChatHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    background: #ededed;\n    padding: 10px;\n    align-items: center;\n    gap: 10px;\n`;\n_c2 = ChatHeader;\nconst ProfileImg = styled.img`\n    height: 32px;\n    width: 32px;\n    border-radius: 50%;\n`;\n_c3 = ProfileImg;\nconst ChatBox = styled.div`\n    display: flex;\n    background: #f0f0f0;\n    padding: 10px;\n    align-items: center;\n    bottom: 0px;\n`;\n_c4 = ChatBox;\nconst EmojiIcon = styled.img`\n    height: 22px;\n    width: 22px;\n    opacity: 0.4;\n    cursor: pointer;\n`;\n_c5 = EmojiIcon;\nconst MessageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    background: #e5ddd6;\n    overflow-y: auto;\n`;\n_c6 = MessageContainer;\nconst MessageDiv = styled.div`\n    justify-content: ${props => props.Received ? 'flex-start' : 'flex-end'};\n    display: flex;\n    margin: 5px 15px;\n`;\n_c7 = MessageDiv;\nconst Message = styled.div`\n    border-radius: 5px;\n    background: ${props => props.Received ? 'white' : '#daf8cb'};;\n    max-width: 50%;\n    color: #303030;\n    padding: 8px 10px;\n    font-size: 14px;\n`;\n_c8 = Message;\n\nconst ChatComponent = props => {\n  _s();\n\n  const {\n    selectedChat\n  } = props;\n  const [text, setText] = useState('');\n  const [messageList, setMessageList] = useState(messagesList);\n  const [showEmoji, setShowEmoji] = useState(false);\n\n  const onEmojiClick = (event, emoji) => {\n    setText(text + emoji.emoji);\n    setShowEmoji(false);\n  };\n\n  const messageEntered = event => {\n    if (event.key === \"Enter\") {\n      const messages = [...messageList];\n      messages.push({\n        id: 0,\n        messageType: \"TEXT\",\n        text: text,\n        senderID: 0,\n        addedOn: \"12:00 PM\"\n      });\n      setMessageList(messages);\n      setText(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: [/*#__PURE__*/_jsxDEV(ProfileImg, {\n        src: selectedChat.profilePic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), \" \", selectedChat.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageContainer, {\n      children: messageList.map(message => {\n        return /*#__PURE__*/_jsxDEV(MessageDiv, {\n          Received: !!message.senderID,\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            Received: !!message.senderID,\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      children: /*#__PURE__*/_jsxDEV(SearchContainer, {\n        children: [showEmoji ? /*#__PURE__*/_jsxDEV(Picker, {\n          pickerStyle: {\n            position: \"absolute\",\n            bottom: \"60px\"\n          },\n          onEmojiClick: onEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 34\n        }, this) : null, /*#__PURE__*/_jsxDEV(EmojiIcon, {\n          onClick: () => setShowEmoji(!showEmoji),\n          src: \"/data.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n          placeholder: \"Type a message\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          onKeyDown: messageEntered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatComponent, \"CMcsMmgYy+CV57BXJppLIrVX15w=\");\n\n_c9 = ChatComponent;\nexport default ChatComponent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"ProfileImg\");\n$RefreshReg$(_c4, \"ChatBox\");\n$RefreshReg$(_c5, \"EmojiIcon\");\n$RefreshReg$(_c6, \"MessageContainer\");\n$RefreshReg$(_c7, \"MessageDiv\");\n$RefreshReg$(_c8, \"Message\");\n$RefreshReg$(_c9, \"ChatComponent\");","map":{"version":3,"sources":["/Users/mani/Desktop/React/whatsapp-clone/src/Components/ChatComponent.js"],"names":["styled","SearchContainer","SearchInput","messagesList","Picker","useState","Container","div","ChatHeader","ProfileImg","img","ChatBox","EmojiIcon","MessageContainer","MessageDiv","props","Received","Message","ChatComponent","selectedChat","text","setText","messageList","setMessageList","showEmoji","setShowEmoji","onEmojiClick","event","emoji","messageEntered","key","messages","push","id","messageType","senderID","addedOn","profilePic","name","map","message","position","bottom","e","target","value"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport {SearchContainer, SearchInput} from './ListComponent';\nimport {messagesList} from '../mockData';\nimport Picker from 'emoji-picker-react';\nimport { useState } from 'react';\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    flex: 3;\n    background: #f6f7f8;\n`\nconst ChatHeader = styled.div `\n    display: flex;\n    flex-direction: row;\n    background: #ededed;\n    padding: 10px;\n    align-items: center;\n    gap: 10px;\n`\nconst ProfileImg = styled.img`\n    height: 32px;\n    width: 32px;\n    border-radius: 50%;\n`;\n\nconst ChatBox = styled.div `\n    display: flex;\n    background: #f0f0f0;\n    padding: 10px;\n    align-items: center;\n    bottom: 0px;\n`;\n\nconst EmojiIcon = styled.img`\n    height: 22px;\n    width: 22px;\n    opacity: 0.4;\n    cursor: pointer;\n`;\n\nconst MessageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    background: #e5ddd6;\n    overflow-y: auto;\n`\n\nconst MessageDiv = styled.div `\n    justify-content: ${props => props.Received?  'flex-start' : 'flex-end'};\n    display: flex;\n    margin: 5px 15px;\n`\nconst Message = styled.div `\n    border-radius: 5px;\n    background: ${props => props.Received?  'white' : '#daf8cb'};;\n    max-width: 50%;\n    color: #303030;\n    padding: 8px 10px;\n    font-size: 14px;\n`\n\nconst ChatComponent = (props) => {\n    const {selectedChat} = props;\n    const [text, setText] = useState('');\n    const [messageList, setMessageList] = useState(messagesList);\n    const [showEmoji, setShowEmoji] = useState(false);\n    const onEmojiClick = (event, emoji) => {\n        setText(text+emoji.emoji);\n        setShowEmoji(false);\n    };\n    const messageEntered = (event) => {\n        if(event.key === \"Enter\") {\n            const messages = [...messageList];\n            messages.push({\n                id: 0,\n                messageType: \"TEXT\",\n                text: text,\n                senderID: 0,\n                addedOn: \"12:00 PM\"\n            });\n            setMessageList(messages);\n            setText(\"\");\n        }\n    }\n    return(\n        <Container>\n            <ChatHeader>\n                <ProfileImg src={selectedChat.profilePic}/> {selectedChat.name}\n            </ChatHeader>\n            <MessageContainer>\n                {messageList.map((message) => {\n                    return (\n                        <MessageDiv Received = {!!message.senderID}>\n                            <Message Received = {!!message.senderID}>\n                                {message.text}\n                            </Message>\n                        </MessageDiv>\n                        )\n                    })\n                }\n            </MessageContainer>\n            <ChatBox>\n                <SearchContainer>\n                    {showEmoji ? <Picker \n                        pickerStyle = {{position: \"absolute\", bottom: \"60px\"}}\n                        onEmojiClick={onEmojiClick} />\n                        : null\n                    }\n                    <EmojiIcon onClick = {() => setShowEmoji(!showEmoji)} src=\"/data.svg\" />\n                    <SearchInput placeholder = \"Type a message\" value={text} onChange = {(e) => setText(e.target.value)} onKeyDown = {messageEntered} />\n                </SearchContainer>\n            </ChatBox>\n        </Container>\n    )\n}\n\nexport default ChatComponent;"]},"metadata":{},"sourceType":"module"}